print('Loaded.')
repeat task.wait() until game:IsLoaded()
task.wait(2.5)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
	local Site;
	if foundAnything == "" then
		Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
	else
		Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
	end
	local ID = ""
	if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
		foundAnything = Site.nextPageCursor
	end
	local num = 0;
	for i,v in pairs(Site.data) do
		local Possible = true
		ID = tostring(v.id)
		if tonumber(v.maxPlayers) > tonumber(v.playing) then
			for _,Existing in pairs(AllIDs) do
				if num ~= 0 then
					if ID == tostring(Existing) then
						Possible = false
					end
				else
					if tonumber(actualHour) ~= tonumber(Existing) then
						local delFile = pcall(function()
							delfile("NotSameServers.json")
							AllIDs = {}
							table.insert(AllIDs, actualHour)
						end)
					end
				end
				num = num + 1
			end
			if Possible == true then
				table.insert(AllIDs, ID)
				task.wait()
				pcall(function()
					writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
					task.wait()
					game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
				end)
				task.wait(4)
			end
		end
	end
end

function Teleport()
	while task.wait() do
	pcall(function()
			TPReturner()
			if foundAnything ~= "" then
				TPReturner()
			end
		end)
	end
end

local LG = game:GetService("Lighting")
local Sky = LG:WaitForChild("Sky")
local Asset = "http://www.roblox.com/asset/?id="
local Http = game:GetService("HttpService")
WebHookURL = _G.WebHook

local function SendPost()
local response = syn.request(
    {
        Url = WebHookURL,
        Method = 'POST',
        Headers = {
            ['Content-Type'] = "application/json"
        },
    Body = Http:JSONEncode({
        ['content'] = "",
        ['embeds'] = {{
            ['title'] = "MoonHopper",
            ["description"] = "Moon is Full Moon or Close!",
            ["type"] = "rich",
            ["color"] = tonumber(0xffffff),
        }}
    })
    })
end

local Moons = {
	["Full"] = Asset.."9709149431",
	["AlmostFull"] = Asset.."9709149052",
}

if _G.AlmostFullAllowed then
	if Sky.MoonTextureId == Moons.Full or Sky.MoonTextureId == Moons.AlmostFull then
		print("Full Moon or Almost Full Moon!")
		SendPost()
	else
		print('No Full Moon or Close.')
		Teleport()
	end
end
if not _G.AlmostFullAllowed then
	if Sky.MoonTextureId == Moons.Full then
		print('Full Moon!')
		SendPost()
	else
		print('No Full Moon.')
		Teleport()
	end
end
